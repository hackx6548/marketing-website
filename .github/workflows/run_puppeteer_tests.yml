# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run puppeteer tests

on:
  push:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # node-version: [12.x, 14.x, 16.x]
        node-version: [ 12.x]
        # mongodb-version: [4.0, 4.2]
        mongodb-version: [4.2]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get -yq update && apt-get -yq install
        sudo apt-get install -y libgbm1

        # cd /home/runner/work/marketing-website/marketing-website/
        sudo npm uninstall puppeteer -g --unsafe-perm=true
        sudo npm install puppeteer -g --unsafe-perm=true
        sudo npm link puppeteer
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
      #   path: "marketing-website"
        persist-credentials: false
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        # cache: 'npm'
        # cache-dependency-path: ./package-lock.json
    - name: Start MongoDB v${{ matrix.mongodb-version }}
      uses: supercharge/mongodb-github-action@1.2.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run: npm install
    - name: npm test
      run: npm test
      env:
        HUBSPOT_API_KEY: ${{ secrets.HUBSPOT_API_KEY }}
        USE_REDIS: ${{ secrets.USE_REDIS }}
        EVENTBRIDE_API_KEY: ${{ secrets.EVENTBRIDE_API_KEY }}