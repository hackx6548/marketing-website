name: trigger_deploy
on:
  repository_dispatch:
  workflow_dispatch:
  release:
    types: 
      - created
  push:
    branches:
      - staging
jobs:
  deploy-remote-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
      - name: Git branch name
        id: git-branch-name
        uses: EthanSK/git-branch-name-action@v1
      - name: Trigger Deploy - Dispatch initiating repository event for infrastructure repo to trigger a deployment
        if: github.event.action != 'deploy_successful'
        run: |
          curl -X POST https://api.github.com/repos/DigitalCareerInstitute/infrastructure/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "trigger_deploy", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "branch_name": "${{github.event_name == 'release' && 'master' || 'staging' }}", "sha": "'"$GITHUB_SHA"'"   }}'
      - name: ACK Telegram - Acknowledge deploy_successful from remote infrastructure repository
        if: github.event.action == 'deploy_successful'
        run: |
          curl -s -X POST https://api.telegram.org/${{secrets.TELEGRAM_BOT_ID}}/sendMessage \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -d chat_id=${{ secrets.TELEGRAM_BOT_CHAT_ID }} \
          -d text="Deploy of marketing-website ${{ github.event.client_payload.branch_name }} ${{ github.event.client_payload.sha }} on $(date) successful"
      - name: ACK Slack - Acknowledge deploy_successful from remote infrastructure repository
        if: github.event.action == 'deploy_successful' 
        run: |
           curl -X POST https://hooks.slack.com/services/${{secrets.SLACK_WEBHOOK}} \
           -H 'Content-type: application/json' \
           --data "{'text':'Deploy of marketing-website ${{ github.event.client_payload.branch_name }} ${{ github.event.client_payload.sha }} on $(date) successful'}"

